name: Build & Deploy to Cloud Run

on:
  push:
    branches: [master]

env:
  _REGION: us-east1
  _REPO_NAME: maya-backend-repo
  _SERVICE_NAME: maya-backend-service
  _IMAGE: maya-backend

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - uses: actions/checkout@v3

      # 1. Create Artifact Registry repo if needed
      - name: Create Artifact Registry Repository
        run: |
          gcloud artifacts repositories describe ${_REPO_NAME} --location=${_REGION} || \
          gcloud artifacts repositories create ${_REPO_NAME} \
            --repository-format=docker --location=${_REGION} --quiet
        id: create-repo

      # 2. Authenticate Docker to Artifact Registry
      - name: Authenticate Docker to Artifact Registry
        run: |
          gcloud auth configure-docker ${_REGION}-docker.pkg.dev
        id: docker-auth
        wait_for: ['create-repo']

      # 3. Build Docker image (no secrets at build time)
      - name: Build Docker Image
        run: |
          docker build \
            -t ${_REGION}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${_REPO_NAME}/${_IMAGE}:${GITHUB_SHA} .
        id: build
        wait_for: ['docker-auth']

      # 4. Push Docker image
      - name: Push Docker Image
        run: |
          docker push ${_REGION}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${_REPO_NAME}/${_IMAGE}:${GITHUB_SHA}
        id: push
        wait_for: ['build']

      # 5. Deploy to Cloud Run with runtime secrets
      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy ${_SERVICE_NAME} \
            --image=${_REGION}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${_REPO_NAME}/${_IMAGE}:${GITHUB_SHA} \
            --platform=managed \
            --region=${_REGION} \
            --allow-unauthenticated \
            --update-env-vars \
              AIVEN_DB_PASSWORD="${{ secrets.AIVEN_DB_PASSWORD }}",\
              OPENAI_API_KEY="${{ secrets.OPENAI_API_KEY }}",\
              JWT_SECRET="${{ secrets.JWT_SECRET }}"
id: deploy
wait_for: ['push']
